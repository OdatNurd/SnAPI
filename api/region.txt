%hyperhelp title="sublime.Region Class" date="2018-10-31"


*|region:Region Class|*
============

Represents an area of the buffer. Empty regions, where a == b are valid.

This class is contained in the |sublime| module.


*|_none:Constructors|*
------------

*Region*(a, <b=a>, <xpos=-1>)

    Creates a Region with initial values `a` and `b`. If `b` is not specified,
    it defaults to `a`.


*|_none:Properties|*
----------

*region.a*
  Type: int

    The first end of the region.


*region.b*
  Type: int

    The second end of the region. May be less that a, in which case the region
    is a reversed one.


*region.xpos*
  Type: int

    The target horizontal position of the region, or `-1` if undefined. Effects
    behavior when pressing the up or down keys.


*|_none:Methods|*
-------

*region.__str__*()  `[UNDOCUMENTED]`
  Returns: string

    Returns an "informal", nicely printable string representation of the
    region.


*region.__repr__*()  `[UNDOCUMENTED]`
  Returns: string

    Returns an "official" string representation of the region.


*region.__len__*()  `[UNDOCUMENTED]`
  Returns: int

    Returns the number of characters spanned by the region. Always >= 0.


*region.__eq__*(rhs)  `[UNDOCUMENTED]`
  Returns: value

    Determines if `rhs` is also a `Region` and, if so, if it spans the same
    region that this region spans.


*region.__lt__*(rhs)  `[UNDOCUMENTED]`
  Returns: value

    Determines if this region starts before or ends before the region in `rhs`.


*region.begin*()
  Returns: int

    Returns the minimum of a and b.


*region.end*()
  Returns: int

    Returns the maximum of a and b.


*region.size*()
  Returns: int

    Returns the number of characters spanned by the region. Always >= 0.


*region.empty*()
  Returns: bool

    Returns `True` if `begin()` == `end()`.


*region.cover*(region)
  Returns: |Region|

    Returns a Region spanning both this and the given regions.


*region.intersection*(region)
  Returns: |Region|

    Returns the set intersection of the two regions.


*region.intersects*(region)
  Returns: bool

    Returns `True` if self == `region` or both include one or more positions in
    common.


*region.contains*(region)
  Returns: bool

    Returns `True` if the given `region` is a subset.


*region.contains*(point)
  Returns: bool

    Returns `True` if `begin()` <= `point` <= `end()`.


--------------------------------------------------------------------------------
API Help Copyright © Sublime HQ Pty Ltd                     |api_reference.html|